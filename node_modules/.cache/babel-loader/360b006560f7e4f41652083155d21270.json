{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikash Kumar\\\\Desktop\\\\React\\\\weather\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"7c36503de65012532dc787a6f09a76fd\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    console.log(evt);\n\n    if (evt.key === \"Enter\" || evt.type === \"click\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  const timeBuilder = t => {\n    let hours = t.getHours();\n    let min = t.getMinutes();\n    return `${hours} : ${min}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weather.main != \"undefined\" ? Math.round(weather.main.temp) > 25 ? 'app warm' : 'app' : 'app',\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Enter...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            onClick: search,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \",\", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [dateBuilder(new Date()), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 12\n            }, this), timeBuilder(new Date())]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WfIlIcXSxCUve4W/aFy4QSWUDkM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Vikash Kumar/Desktop/React/weather/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","console","log","type","fetch","then","res","json","result","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","timeBuilder","t","hours","getHours","min","getMinutes","main","Math","round","temp","e","target","value","name","sys","country","Date"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nconst api =\n{\n    key: \"7c36503de65012532dc787a6f09a76fd\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n   \n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt =>\n  {   \n    console.log(evt);\n      if(evt.key === \"Enter\" || evt.type === \"click\")\n      {\n        fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n          .then(res => res.json())\n          .then(result => {setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n      }\n  }\n\n  const dateBuilder = (d) =>\n  {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n  const timeBuilder = (t) =>\n  {\n\n    let hours = t.getHours();\n    let min = t.getMinutes();\n\n\n    return `${hours} : ${min}`\n  }\n\n  return (\n    \n    <div className={\n      (typeof weather.main != \"undefined\") ? ( (Math.round(weather.main.temp) > 25) ? 'app warm' : 'app' )\n      : 'app' }>\n      <main>\n        <div className=\"search-box\">\n          <input type=\"text\" className=\"search-bar\" placeholder=\"Enter...\" onChange ={e => setQuery(e.target.value)}\n          value= {query}\n          onKeyPress={search}/>\n          <div className = \"button\">\n          <button type =\"submit\" className =\"btn\" onClick={search}>Search</button>\n          </div>\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n        <div className=\"location-box\">\n          <div className=\"location\">\n            {weather.name},{weather.sys.country}\n          </div>\n          <div className=\"date\">\n           {dateBuilder(new Date())}\n           <br></br>\n           {timeBuilder(new Date())}\n          </div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              {Math.round(weather.main.temp)}°C\n            </div>\n            <div className=\"weather\">\n            {weather.weather[0].main}\n            </div>\n            </div>\n          </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}